upstream api {
  server api:4000;
}

upstream client {
  server client:3000;
}

server {
  client_max_body_size 10M;
  server_name thepixelportraits.me;
  server_name www.thepixelportraits.me;

	if ($host = thepixelportraits.me) {
		return 301 https://www.$host$request_uri;
	}

	gzip on;
	gzip_disable "msie6";

	gzip_vary on;
	gzip_proxied any;
	gzip_comp_level 6;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;
	gzip_min_length 0;
	gzip_types text/plain application/javascript text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype;

  location /api {
	if ($host != "www.thepixelportraits.me") {
      return 403 "<h1>403</h1>\n";
    }
    rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
  }

  location / {
    proxy_pass http://client;
  }

	# Media: images, icons, video, audio, HTC
	#location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
	#  expires 1M;
	#  access_log off;
	#  add_header Cache-Control "public";
	#}

  listen 443 ssl http2;
  ssl_certificate /etc/letsencrypt/thepixelportraits.crt; # full chain certificate file, full path
  ssl_certificate_key /etc/letsencrypt/thepixelportraits.key; #private key, full path
  include /etc/letsencrypt/options-ssl-nginx.conf; # extra ssl config - see other file, you can put this anywhere, just use full path to it though
}

server {
	client_max_body_size 10M;
    # redirect to https
    if ($host = thepixelportraits.me) {
        return 301 https://$host$request_uri;
    }

    if ($host = www.thepixelportraits.me) {
        return 301 https://$host$request_uri;
    }

    listen  80;
    server_name dev.thepixelportraits.me;
    server_name www.dev.thepixelportraits.me;

    # return a 404 if it gets past the above
    return 404;

}